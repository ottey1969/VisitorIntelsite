ðŸ”§ STEP 1: BACKUP YOUR CURRENT FILES

Before making any changes, backup these critical files:

Bash


# In your Replit project, create backups
cp app.py app_backup.py
cp templates/index.html templates/index_backup.html
cp static/js/main.js static/js/main_backup.js
cp requirements.txt requirements_backup.txt






ðŸ”§ STEP 2: UPDATE REQUIREMENTS.TXT

Replace your current requirements.txt with the enhanced version:

Plain Text


flask==3.0.3
flask-sqlalchemy==3.1.1
flask-socketio==5.3.6
gunicorn==22.0.0
openai==1.54.3
anthropic==0.37.1
google-genai==0.8.3
requests==2.32.3
trafilatura==1.12.2
psycopg2-binary==2.9.9
pytz==2024.1
pillow==10.4.0
werkzeug==3.0.4
sqlalchemy==2.0.35
aiohttp==3.9.1
asyncio
python-socketio==5.10.0
eventlet==0.33.3






ðŸ”§ STEP 3: ADD API KEYS TO REPLIT SECRETS

In your Replit project, go to Secrets tab and add these 4 API keys:

Plain Text


OPENAI_API_KEY = your_openai_api_key_here
ANTHROPIC_API_KEY = your_anthropic_api_key_here  
PERPLEXITY_API_KEY = your_perplexity_api_key_here
GEMINI_API_KEY = your_gemini_api_key_here


ðŸ”‘ How to Get API Keys:

1.
OpenAI: https://platform.openai.com/api-keys

2.
Anthropic: https://console.anthropic.com/

3.
Perplexity: https://www.perplexity.ai/settings/api

4.
Google Gemini: https://aistudio.google.com/app/apikey





ðŸ”§ STEP 4: CREATE ENHANCED_CONVERSATION_SYSTEM.PY

Create a new file called enhanced_conversation_system.py in your project root with the complete enhanced system code (provided in the extracted files).





ðŸ”§ STEP 5: UPDATE APP.PY

Your app.py already has the import for enhanced_conversation_system. Verify these lines exist:

Python


# Start enhanced conversation system
try:
    from enhanced_conversation_system import start_enhanced_system, setup_enhanced_socketio
    setup_enhanced_socketio(socketio)
    start_enhanced_system()
    logging.info("Enhanced 4-API conversation system started")
except Exception as e:
    logging.error(f"Failed to start enhanced conversation system: {e}")


If these lines don't exist, add them to your app.py file in the with app.app_context(): section.





ðŸ”§ STEP 6: UPDATE JAVASCRIPT FILES

Option A: Replace main.js (Recommended)

Replace your current static/js/main.js with the enhanced version (enhanced_main.js from the extracted files).

Option B: Create new enhanced file

1.
Create static/js/enhanced_main.js with the enhanced code

2.
Update your templates to use the new file





ðŸ”§ STEP 7: UPDATE INDEX.HTML TEMPLATE

Option A: Replace index.html (Recommended)

Replace your current templates/index.html with the enhanced version (enhanced_index.html from the extracted files).

Option B: Manual updates to existing template

Add these key elements to your existing templates/index.html:

1.
Add Socket.IO script before closing body tag:

HTML


<script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>


1.
Update the countdown div:

HTML


<div id="enhanced-countdown" class="mb-4">
    <!-- Countdown will be populated by JavaScript -->
</div>


1.
Add system status display:

HTML


<div class="system-status-display bg-white rounded-4 shadow-sm p-3 mb-4">
    <div class="row text-center">
        <div class="col-md-3">
            <small class="text-muted">System Status:</small><br>
            <span class="system-status badge bg-success">System Running</span>
        </div>
        <div class="col-md-3">
            <small class="text-muted">Connection:</small><br>
            <span class="connection-status badge bg-success">Connected</span>
        </div>
        <div class="col-md-3">
            <small class="text-muted">Local Time:</small><br>
            <span class="local-time-display current-time">Loading...</span>
        </div>
        <div class="col-md-3">
            <small class="text-muted">Actions:</small><br>
            <button class="btn btn-sm btn-outline-primary start-conversation-btn" onclick="startConversation()">
                <i class="fas fa-play me-1"></i>Start Now
            </button>
        </div>
    </div>
</div>






ðŸ”§ STEP 8: INSTALL PACKAGES

In your Replit Shell, run:

Bash


pip install flask-socketio aiohttp python-socketio eventlet






ðŸ”§ STEP 9: RESTART YOUR APPLICATION

1.
Stop your current Replit application

2.
Click the Run button to restart with the enhanced system

3.
Check the console for "Enhanced 4-API conversation system started" message





ðŸ”§ STEP 10: VERIFY INTEGRATION

Test the Enhanced System:

1.
Open your live site: https://yourproject.replit.app/

2.
Check countdown timer: Should show accurate time remaining

3.
Check local time: Should update every second and match your actual time

4.
Check API status: All 4 APIs should show green dots if keys are configured

5.
Test manual start: Click "Start Now" button to trigger conversation

6.
Check console: Open browser dev tools and run testEnhancedSystem()

Expected Results:

âœ… Countdown Timer: Shows "29:XX" and counts down properly


âœ… Local Time: Updates every second with correct time


âœ… API Status: Green dots for all configured APIs


âœ… Real Messages: New messages appear with progressive timestamps


âœ… Investigation Buttons: Work without 404 errors


âœ… WebSocket Connection: Shows "Connected" status





ðŸš¨ TROUBLESHOOTING

Problem: "Enhanced conversation system failed to start"

Solution: Check that all API keys are added to Replit Secrets

Problem: Countdown timer shows "00:00"

Solution: Restart the application - the system needs to initialize

Problem: No new messages appearing

Solution: Check browser console for errors and verify API keys are valid

Problem: 404 errors on investigation buttons

Solution: Ensure the enhanced JavaScript is loaded and Socket.IO is connected

Problem: "Module not found" errors

Solution: Run pip install -r requirements.txt in Replit Shell





ðŸŽ¯ TESTING CHECKLIST

Before going live, verify these items:




Countdown timer shows accurate time and counts down




Local time updates every second




All 4 API status indicators show green




Manual "Start Now" button works




New messages appear with progressive timestamps




Investigation buttons open modals (no 404 errors)




WebSocket shows "Connected" status




Console shows no JavaScript errors




System automatically starts new conversations every 30 minutes

